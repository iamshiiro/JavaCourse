import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author carlosv
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        
        //Q1TF.setText("98");
        //Q2TF.setText("87");
        //Q3TF.setText("98");        
        //MidTF.setText("80");        
        //FinalETF.setText("98");        
        //AssTF.setText("78");
        //AttTF.setText("67");
        //ExPntTF.setText("5");
        
        Q1PTF.setText("10");
        Q2PTF.setText("10");
        Q3PTF.setText("10");
        MidPTF.setText("20");
        FinalEPTF.setText("20");
        AssPTF.setText("15");
        AttPTF.setText("15");
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        StudentIDTF = new javax.swing.JTextField();
        Q1TF = new javax.swing.JTextField();
        Q2TF = new javax.swing.JTextField();
        Q3TF = new javax.swing.JTextField();
        MidTF = new javax.swing.JTextField();
        FinalETF = new javax.swing.JTextField();
        AssTF = new javax.swing.JTextField();
        AttTF = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ExPntTF = new javax.swing.JTextField();
        Q1PTF = new javax.swing.JTextField();
        Q2PTF = new javax.swing.JTextField();
        Q3PTF = new javax.swing.JTextField();
        MidPTF = new javax.swing.JTextField();
        FinalEPTF = new javax.swing.JTextField();
        AssPTF = new javax.swing.JTextField();
        AttPTF = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        FinalGradeTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        CalculateB = new javax.swing.JButton();
        AddB = new javax.swing.JButton();
        DelB = new javax.swing.JButton();
        UpdB = new javax.swing.JButton();
        SaveB = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        GradeTable = new javax.swing.JTable();
        SearchTF = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        LoadB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Grade Calculator & List");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Student ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel3.setText("Quiz 1");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setText("Quiz 2");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setText("Project");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel6.setText("Midterm");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel7.setText("Final Exam");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel8.setText("Assignments");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel9.setText("Attendance");

        StudentIDTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentIDTFActionPerformed(evt);
            }
        });

        AttTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttTFActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setText("Extra Points");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setText("%");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setText("%");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("%");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setText("%");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setText("%");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setText("%");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setText("%");

        FinalGradeTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Final Grade");

        CalculateB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        CalculateB.setText("Calculate");
        CalculateB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CalculateBActionPerformed(evt);
            }
        });

        AddB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        AddB.setText("Add");
        AddB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBActionPerformed(evt);
            }
        });

        DelB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        DelB.setText("Delete");
        DelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DelBActionPerformed(evt);
            }
        });

        UpdB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        UpdB.setText("Update");
        UpdB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdBActionPerformed(evt);
            }
        });

        SaveB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        SaveB.setText("Save");
        SaveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveBActionPerformed(evt);
            }
        });

        GradeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Quiz 1", "Quiz 2", "Project", "Midterm", "Final Exam", "Assignments", "Attendace", "Extra Points", "Final Grade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        GradeTable.getTableHeader().setReorderingAllowed(false);
        GradeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                GradeTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(GradeTable);
        if (GradeTable.getColumnModel().getColumnCount() > 0) {
            GradeTable.getColumnModel().getColumn(0).setResizable(false);
            GradeTable.getColumnModel().getColumn(0).setPreferredWidth(100);
            GradeTable.getColumnModel().getColumn(1).setResizable(false);
            GradeTable.getColumnModel().getColumn(2).setResizable(false);
            GradeTable.getColumnModel().getColumn(3).setResizable(false);
            GradeTable.getColumnModel().getColumn(4).setResizable(false);
            GradeTable.getColumnModel().getColumn(5).setResizable(false);
            GradeTable.getColumnModel().getColumn(6).setResizable(false);
            GradeTable.getColumnModel().getColumn(7).setResizable(false);
            GradeTable.getColumnModel().getColumn(8).setResizable(false);
            GradeTable.getColumnModel().getColumn(9).setResizable(false);
        }

        SearchTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTFActionPerformed(evt);
            }
        });
        SearchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearchTFKeyReleased(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel19.setText("Search Student ID:");

        LoadB.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        LoadB.setText("Load");
        LoadB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 693, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel9)
                                                .addComponent(jLabel10)))
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(FinalETF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(FinalEPTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jLabel15))
                                            .addComponent(ExPntTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(AssTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(AssPTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jLabel17))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(AttTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(AttPTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, 0)
                                                .addComponent(jLabel16)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel18)
                                                    .addComponent(CalculateB, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(FinalGradeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(86, 86, 86))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(21, 21, 21)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel19)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(SearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addComponent(AddB, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addComponent(UpdB)
                                                            .addComponent(DelB, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(LoadB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                                        .addComponent(SaveB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(49, 49, 49))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(StudentIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(29, 29, 29)
                                        .addComponent(jLabel6)))
                                .addGap(61, 61, 61)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(58, 58, 58)
                                            .addComponent(jLabel14))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(Q3TF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(Q3PTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(Q1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Q2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Q1PTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, 0)
                                                    .addComponent(jLabel11))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(Q2PTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(0, 0, Short.MAX_VALUE)
                                                    .addComponent(jLabel12)))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(MidTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(MidPTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, 0)
                                        .addComponent(jLabel13)))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(220, 220, 220))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(MidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(MidPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel13))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(FinalGradeTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(StudentIDTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(Q1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Q1PTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Q2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(Q2PTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel12)))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(Q3TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Q3PTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(LoadB)
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(FinalETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(FinalEPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(AssTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel8)
                                        .addComponent(AssPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(AttTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AttPTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(33, 33, 33)
                                .addComponent(jLabel16))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(SaveB)
                        .addGap(18, 18, 18)
                        .addComponent(CalculateB)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(DelB)
                            .addComponent(AddB))))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(ExPntTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(UpdB)
                    .addComponent(SearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void StudentIDTFActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void AttTFActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // TODO add your handling code here:
    }                                     

    private void CalculateBActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // Calculates grades
        
        if (Q1TF.getText().equals("")||Q2TF.getText().equals("")||Q3TF.getText().equals("")||MidTF.getText().equals("")||FinalETF.getText().equals("")||AssTF.getText().equals("")||AttTF.getText().equals("")||ExPntTF.getText().equals("")) {
            //Show error message of data missing
            JOptionPane.showMessageDialog(this, "Please Enter All Data!");
        }else {
            //Create variables for the textfields
            String StudentID, Q1S, Q2S, Q3S, MidS, FinalES, AssS, AttS, ExtraPS, Q1P, Q2P, Q3P, MidP, FinalEP, AssP, AttP, FinalGradeT;
        
        
            //Assign the textfield input in the variables
            StudentID = StudentIDTF.getText();
            Q1S = Q1TF.getText();
            Q2S = Q2TF.getText();
            Q3S = Q3TF.getText();
            MidS = MidTF.getText();
            FinalES = FinalETF.getText();
            AssS = AssTF.getText();
            AttS = AttTF.getText();
            ExtraPS = ExPntTF.getText();
        
            //Convert string to double
            double Quiz1 = Double.parseDouble(Q1S);
            double Quiz2 = Double.parseDouble(Q2S);
            double Quiz3 = Double.parseDouble(Q3S);
            double Midterm = Double.parseDouble(MidS);
            double FinalExam = Double.parseDouble(FinalES);
            double Assignments = Double.parseDouble(AssS);
            double Attendance = Double.parseDouble(AttS);
            double ExtraP = Double.parseDouble(ExtraPS);
        
        
            //Assign the textfield input in the variables
            Q1P = Q1PTF.getText();
            Q2P = Q2PTF.getText();
            Q3P = Q3PTF.getText();
            MidP = MidPTF.getText();
            FinalEP = FinalEPTF.getText();
            AssP = AssPTF.getText();
            AttP = AttPTF.getText();
        
            //Convert string to double
            double Quiz1DP = Double.parseDouble(Q1P);
            double Quiz2DP = Double.parseDouble(Q2P);
            double Quiz3DP = Double.parseDouble(Q3P);
            double MidtermDP = Double.parseDouble(MidP);
            double FinalExamDP = Double.parseDouble(FinalEP);
            double AssignmentsDP = Double.parseDouble(AssP);
            double AttendanceDP = Double.parseDouble(AttP);
        
        
            double Quiz1Score, Quiz2Score, Quiz3Score, MidScore, FinalEScore, AssScore, AttScore;
            
            //Calculate individual scores
            Quiz1Score = Quiz1 * (Quiz1DP / 100);
            Quiz2Score = Quiz2 * (Quiz2DP / 100);
            Quiz3Score = Quiz3 * (Quiz3DP / 100);
            MidScore = Midterm * (MidtermDP / 100);
            FinalEScore = FinalExam * (FinalExamDP / 100);
            AssScore = Assignments * (AssignmentsDP / 100);
            AttScore = Attendance * (AttendanceDP / 100);
        
   
            //Calculate final grade
            double FinalGradeScore = 0;
            FinalGradeScore = (Quiz1Score + Quiz2Score + Quiz3Score + MidScore + FinalEScore + AssScore + AttScore + ExtraP);
        
            //Round double to two decimal places
            double FormatFinalGradeScore = Math.round(FinalGradeScore*100.0)/100.0;
            FinalGradeScore = FormatFinalGradeScore;
        
            //Convert double to string
            FinalGradeT = Double.toString(FinalGradeScore);
            //Display final grade in textfield
            FinalGradeTF.setText(FinalGradeT);
        }
        
    }                                          

    private void AddBActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // Add Button Code
        
        //If a textfield is empty, show error message
        if (StudentIDTF.getText().equals("")||Q1TF.getText().equals("")||Q2TF.getText().equals("")||Q3TF.getText().equals("")||MidTF.getText().equals("")||FinalETF.getText().equals("")||AssTF.getText().equals("")||AttTF.getText().equals("")||ExPntTF.getText().equals("")||FinalGradeTF.getText().equals("")) {
            //Show error message of data missing
            JOptionPane.showMessageDialog(this, "Please Enter All Data!");
        }else {
            //If all data is entered, add to table
            String data[] = {StudentIDTF.getText(), Q1TF.getText(), Q2TF.getText(), Q3TF.getText(), MidTF.getText(), FinalETF.getText(), AssTF.getText(), AttTF.getText(), ExPntTF.getText(), FinalGradeTF.getText()};
            
            //Create variable for GradeTable model
            DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
            
            //Add data to model
            recordModel.addRow(data);
            
            //Show message of data entered correctly
            //JOptionPane.showMessageDialog(this, "Added Data Successfully.");
            
            //Set textfields to add new data for next student
            StudentIDTF.setText("");
            Q1TF.setText("0");
            Q2TF.setText("0");
            Q3TF.setText("0");
            MidTF.setText("0");
            FinalETF.setText("0");
            AssTF.setText("0");
            AttTF.setText("0");
            ExPntTF.setText("0");
            FinalGradeTF.setText("");
            
        }
        
    }                                    

    private void GradeTableMouseClicked(java.awt.event.MouseEvent evt) {                                        
        // Set Data to their textfield
        
        DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
        
        //Set Data to textfield when row is selected
        String StudentIDT, Q1T, Q2T, Q3T, MidT, FinalET, AssT, AttT, ExPntT, FinalGT;
        
        StudentIDT = recordModel.getValueAt(GradeTable.getSelectedRow(), 0).toString();
        Q1T = recordModel.getValueAt(GradeTable.getSelectedRow(), 1).toString();
        Q2T = recordModel.getValueAt(GradeTable.getSelectedRow(), 2).toString();
        Q3T = recordModel.getValueAt(GradeTable.getSelectedRow(), 3).toString();
        MidT = recordModel.getValueAt(GradeTable.getSelectedRow(), 4).toString();
        FinalET = recordModel.getValueAt(GradeTable.getSelectedRow(), 5).toString();
        AssT = recordModel.getValueAt(GradeTable.getSelectedRow(), 6).toString();
        AttT = recordModel.getValueAt(GradeTable.getSelectedRow(), 7).toString();
        ExPntT = recordModel.getValueAt(GradeTable.getSelectedRow(), 8).toString();
        FinalGT = recordModel.getValueAt(GradeTable.getSelectedRow(), 9).toString();
        
        //Set to textfield
        StudentIDTF.setText(StudentIDT);
        Q1TF.setText(Q1T);
        Q2TF.setText(Q2T);
        Q3TF.setText(Q3T);
        MidTF.setText(MidT);
        FinalETF.setText(FinalET);
        AssTF.setText(AssT);
        AttTF.setText(AttT);
        ExPntTF.setText(ExPntT);
        FinalGradeTF.setText(FinalGT);
        
        
    }                                       

    private void DelBActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // Delete Button Code
        
        //Get GradeTable model first
        DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
        
        //Delete row
        if(GradeTable.getSelectedRowCount()==1) {
            //Delete only if a row is selected
            recordModel.removeRow(GradeTable.getSelectedRow());
            JOptionPane.showMessageDialog(this, "Data Successfully Deleted!");
        }else {
            if(GradeTable.getRowCount()==0) {
                //If table is empty display error message
                JOptionPane.showMessageDialog(this, "Table is Empty.");
            }else {
                //If table is not empty but a row is not selected or multiple are selected, display error message
                JOptionPane.showMessageDialog(this, "Please Select a Single Row to be deleted.");
            }
        }
        
    }                                    

    private void UpdBActionPerformed(java.awt.event.ActionEvent evt) {                                     
        // Update Button Code
        
        //Get table model
        DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
        
        if(GradeTable.getSelectedRowCount()==1){
            //Update only if single row is selected
            
            String StudentIDU, Q1U, Q2U, Q3U, MidU, FinalEU, AssU, AttU, ExPntU, FinalGradeU;
            
            StudentIDU = StudentIDTF.getText();
            Q1U = Q1TF.getText();
            Q2U = Q2TF.getText();
            Q3U = Q3TF.getText();
            MidU = MidTF.getText();
            FinalEU = FinalETF.getText();
            AssU = AssTF.getText();
            AttU = AttTF.getText();
            ExPntU = ExPntTF.getText();
            FinalGradeU = FinalGradeTF.getText();
            
            //Set updated value
            recordModel.setValueAt(StudentIDU, GradeTable.getSelectedRow(), 0);
            recordModel.setValueAt(Q1U, GradeTable.getSelectedRow(), 1);
            recordModel.setValueAt(Q2U, GradeTable.getSelectedRow(), 2);
            recordModel.setValueAt(Q3U, GradeTable.getSelectedRow(), 3);
            recordModel.setValueAt(MidU, GradeTable.getSelectedRow(), 4);
            recordModel.setValueAt(FinalEU, GradeTable.getSelectedRow(), 5);
            recordModel.setValueAt(AssU, GradeTable.getSelectedRow(), 6);
            recordModel.setValueAt(AttU, GradeTable.getSelectedRow(), 7);
            recordModel.setValueAt(ExPntU, GradeTable.getSelectedRow(), 8);
            recordModel.setValueAt(FinalGradeU, GradeTable.getSelectedRow(), 9);
            
            //Update Message display
            JOptionPane.showMessageDialog(this, "Data Updated Successfully!");
            
        }else {
            //If table is empty
            if(GradeTable.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Table is Empty.");
            }else {
                //If multiple or no rows are selected
                JOptionPane.showMessageDialog(this, "Please Select a Single Row to be updated.");
            }
        }
        
    }                                    

    private void SaveBActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // Save button Code
        
        if(GradeTable.getRowCount()==0) {
                //If table is empty display error message
                JOptionPane.showMessageDialog(this, "Table is Empty.");
        }else {
            //Set path to destination file
            String filePath = "/Users/carlosv/NetBeansProjects/JavaProject/Data.txt/";
            File file = new File(filePath);
            try {
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
            
                for(int i = 0; i < GradeTable.getRowCount(); i++) {
                    for(int j = 0; j < GradeTable.getColumnCount(); j++) {
                        bw.write(GradeTable.getValueAt(i, j).toString()+" ");
                    }
                    bw.newLine();
                }
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Data Saved Successfully.");
            
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } 
        }
    }                                     

    private void SearchTFActionPerformed(java.awt.event.ActionEvent evt) {                                         
        
    }                                        

    private void SearchTFKeyReleased(java.awt.event.KeyEvent evt) {                                     
        // Search button Code
        
        DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
        
        String Search = SearchTF.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(recordModel);
        GradeTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(Search));
    }                                    

    private void LoadBActionPerformed(java.awt.event.ActionEvent evt) {                                      
        // Load Button Code
        
        String filePath = "/Users/carlosv/NetBeansProjects/JavaProject/Data.txt/";
        File file = new File(filePath);
        
        try {
            FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            
            DefaultTableModel recordModel = (DefaultTableModel)GradeTable.getModel();
            Object[] lines = br.lines().toArray();
            
            for(int i = 0; i < lines.length; i++) {
                String[] row = lines[i].toString().split(" ");
                recordModel.addRow(row);
            }
            JOptionPane.showMessageDialog(this, "Data Loaded Successfully.");
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }                                     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JButton AddB;
    private javax.swing.JTextField AssPTF;
    private javax.swing.JTextField AssTF;
    private javax.swing.JTextField AttPTF;
    private javax.swing.JTextField AttTF;
    private javax.swing.JButton CalculateB;
    private javax.swing.JButton DelB;
    private javax.swing.JTextField ExPntTF;
    private javax.swing.JTextField FinalEPTF;
    private javax.swing.JTextField FinalETF;
    private javax.swing.JTextField FinalGradeTF;
    private javax.swing.JTable GradeTable;
    private javax.swing.JButton LoadB;
    private javax.swing.JTextField MidPTF;
    private javax.swing.JTextField MidTF;
    private javax.swing.JTextField Q1PTF;
    private javax.swing.JTextField Q1TF;
    private javax.swing.JTextField Q2PTF;
    private javax.swing.JTextField Q2TF;
    private javax.swing.JTextField Q3PTF;
    private javax.swing.JTextField Q3TF;
    private javax.swing.JButton SaveB;
    private javax.swing.JTextField SearchTF;
    private javax.swing.JTextField StudentIDTF;
    private javax.swing.JButton UpdB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration                   
}
